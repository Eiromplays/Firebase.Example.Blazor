@page "/projects"
@using Firebase.Database
@using Firebase.Database.Streaming
@using Firebase.Realtime.BlazorServer.Example.Data

<PageTitle>Projects</PageTitle>

<div class="projects">
    @foreach (var (_, project) in _projects)
    {
        <div class="project">
            @if (!string.IsNullOrWhiteSpace(project.Url))
            {
                <img class="project-image" src=@project.Url alt=@project.Name />
            }
            <h1>@project.Name</h1>
            <p>@project.Description</p>
        </div>
    }
</div>

@code {

    private readonly Dictionary<string, Project> _projects = new();

    protected override async Task OnInitializedAsync()
    {
        var firebase = new FirebaseClient("https://frozensoft-software-2ef84-default-rtdb.europe-west1.firebasedatabase.app/");
    
        firebase
            .Child("projects")
            .AsObservable<Project>()
            .Subscribe(OnProjectsChanged);
    }
    
    private void OnProjectsChanged(FirebaseEvent<Project> projectEvent)
    {
        switch (projectEvent.EventType)
        {
            case FirebaseEventType.Delete:
                RemoveProject(projectEvent.Key);
                break;
            case FirebaseEventType.InsertOrUpdate:
                AddProject(projectEvent); 
                break;
            default:
                throw new ArgumentOutOfRangeException();
        }
        
        InvokeAsync(StateHasChanged);
    }

    private void RemoveProject(string key)
    {
        if (_projects.ContainsKey(key))
            _projects.Remove(key);
    }
    
    private void AddProject(FirebaseObject<Project> project) => _projects[project.Key] = project.Object;
}